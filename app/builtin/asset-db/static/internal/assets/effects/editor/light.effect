CCEffect %{
  techniques:
  - passes:
    - vert: light-vs:vert
      frag: light-fs:frag
      rasterizerState:
        cullMode: none
      depthStencilState:
        depthTest: true
        depthWrite: true
      blendState:
        targets:
        - blend: false
}%

CCProgram light-vs %{
  precision mediump float;
  #include <cc-local>
  #include <cc-global>
  #include <common>
  #include <gamma>

  in vec3 a_position;
  out vec3 v_color;

  uniform Constant {
    vec4 color;
    vec4 intensitySize; // x: intensity, y: size
  };

  vec4 vert () {
    v_color = color.rgb * intensitySize.x * 100.0;
  #if CC_USE_HDR
    v_color *= FP_SCALE;
  #else
    v_color = LinearToSRGB(v_color * cc_exposure.x);
  #endif
    return cc_matViewProj * cc_matWorld * vec4(a_position * intensitySize.y, 1.0);
  }
}%

CCProgram light-fs %{
  precision mediump float;

  in vec3 v_color;

  vec4 frag () {
    return vec4(v_color, 1.0);
  }
}%
