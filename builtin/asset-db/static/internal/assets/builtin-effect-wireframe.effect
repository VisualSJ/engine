%{
  techniques: [
    {
      queue: opaque
      lod: 100
      passes: [
        {
          vert: wire-vs
          frag: wire-fs
          depthStencilState: {
            depthTest: true
            depthWrite: false
          }
          properties: {
            color: { type: 'color4', value: [1, 1, 1, 1] }
          }
        }
      ]
    }
  ]
%}

%% wire-vs {
  attribute vec3 a_position;
  attribute vec3 a_normal;

  #include <cc-local>
  #include <cc-global>

  varying vec3 position_w;
  varying vec3 normal_w;

  void main () {
    vec4 pos = vec4(a_position, 1);

    position_w = (cc_matWorld * pos).xyz;
    pos = cc_matViewProj * cc_matWorld * pos;
    normal_w = _normalMatrix * a_normal.xyz;

    gl_Position = pos;
  }
}

%% wire-fs {
  #include <cc-global>

  uniform Constants {
    vec4 color;
  };

  varying vec3 position_w;
  varying vec3 normal_w;

  void main () {
    gl_FragColor = color;

    vec3 V = normalize(cc_cameraPos - position_w);
    if (dot (normal_w, V) <= 0.0) {
      gl_FragColor.rgb *= 0.6;
    }
  }
}
