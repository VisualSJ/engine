CCEFFECT {
  techniques: [
    {
      queue: transparent
      lod: 200
      passes: [
        {
          vert: particle-vs-legacy:lpvs_main
          frag: particle-add-multiply-fs:frag
          rasterizerState: {
            cullMode: none
          }
          depthStencilState: {
            depthTest: true
            depthWrite: false
          }
          blendState: {
            targets: [
              {
                blend: true
                blendSrc: one
                blendDst: one_minus_src_alpha
                blendSrcAlpha: one
                blendDstAlpha: one_minus_src_alpha
              }
            ]
          }
          properties: {
            mainTexture:   { type: 'sampler2D', value: 'grey'               }
            mainTiling:    { type: 'vec2',      value: [1, 1]               }
            mainOffset:    { type: 'vec2'       value: [0, 0]               }
            frameTile:     { type: 'vec2'       value: [1,1]                }
            velocityScale: { type: 'float'      value: 0                    }
            lengthScale:   { type: 'float'      value: 0                    }
            tintColor:     { type: 'color4'     value: [0.5, 0.5, 0.5, 0.5] }
          }
        }
      ]
    }
  ]
}

CCPROGRAM particle-add-multiply-fs {
  precision mediump float;
  uniform sampler2D mainTexture;
  uniform FragConstants {
    vec4 tintColor;
  };

  in vec2 uv;
  in vec4 color;

  vec4 frag () {
    // TODO: soft particle
    vec4 col;
    vec4 texColor = texture(mainTexture, uv);
    col.rgb = tintColor.rgb * texColor.rgb * color.rgb * vec3(2.0);
    col.a = (1.0 - texColor.a) * (tintColor.a * color.a * 2.0);
    return col;
  }
}
