%{
  techniques: [
    {
      queue: opaque
      lod: 100
      passes: [
        {
          vert: line-vs
          frag: line-fs
          depthStencilState: {
            depthTest: true
            depthWrite: false
          }
        }
      ]
    }
  ]
%}

%% line-vs {
  attribute vec3 a_position;
  attribute vec3 a_color;

  #include <cc-local>
  #include <cc-global>

  varying vec3 color;

  void main () {
    vec4 pos = cc_matViewProj * cc_matWorld * vec4(a_position, 1);

    // // halp-pixel offset solution 1
    // vec4 pos = cc_matViewProj * cc_matWorld * vec4(
    //   floor(a_position.x) + 0.5,
    //   floor(a_position.y) + 0.5,
    //   a_position.z,
    //   1
    // );

    // halp-pixel offset solution 2
    // vec2 hpc = vec2(screen.x * 0.5, screen.y * 0.5);
    // vec4 pos = cc_matViewProj * cc_matWorld * vec4(a_position, 1);
    // pos = vec4(
    //   2.0 * ((floor((pos.x + 1.0) * 0.5 * screen.x) + 0.5) / screen.x - 0.5),
    //   2.0 * ((floor((pos.y + 1.0) * 0.5 * screen.y) - 0.5) / screen.y - 0.5),
    //   pos.z,
    //   pos.w
    // );

    color = a_color;

    gl_Position = pos;
  }
}

%% line-fs {
  varying vec3 color;

  void main () {
    gl_FragColor = vec4(color, 1.0);
  }
}
