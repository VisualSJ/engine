%{
  "techniques": [
    {
      "queue": "opaque",
      "priority" : -1000,
      "lod": 200,
      "passes": [
        {
          "vert": "sky-vs",
          "frag": "sky-fs",
          "stage": "default",
          "cullMode": "none"
        }
      ]
    }
  ],

  "properties": {
    "cubeMap": {
      "type": "samplerCube",
      "value": null
    }
  }
%}

%% sky-vs {
  attribute vec3 a_position;

  uniform mat4 _view_;
  uniform mat4 _proj_;

  varying vec3 viewDir;

  void main() {
    mat4 rot_view_ = mat4(mat3(_view_));
    vec4 clipPos = _proj_ * rot_view_ * vec4(a_position, 1.0);

    gl_Position = clipPos.xyww;
    viewDir = a_position;
  }
}

%% sky-fs {
  varying vec3 viewDir;

  uniform samplerCube cubeMap;
  #include <gamma-correction>
  #include <unpack>

  void main() {
  #if USE_RGBE_CUBEMAP
      vec3 c = unpackRGBE(textureCube(cubeMap, viewDir));
      c = linearToGammaSpaceRGB(c / (1.0 + c));
      gl_FragColor = vec4(c, 1.0);
  #else
      gl_FragColor = textureCube(cubeMap, viewDir);
  #endif
  }
}
